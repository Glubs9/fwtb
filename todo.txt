	- add unit tests
	- there is a suprising similarity between stack and user_code
		- maybe we could implement user_code as a stack and merge the main stack
		and user_code whenever we encounter it, that would kinda work actually
	- add more error messages
		- (not sure what but I have left this here just in case)
	- add variables and the like
		- first write create
		- then write ,
	- add macros
		- more macro support
		- things like quoting and the like
	- create a stdlib
		- which defines variable and constant using create macro
	- control flow
		- how (something to do with dest and origin?)
	- add float stack
	- handle loading files
	- ????
	- profit / we should be done?
	- build it out to fit the forth standard
	- add ok to end of gforth stdout
	- add \n to end of word output because gforth doesn't print newline for each .
	- handle printing things from the stack that aren't ints
		- maybe i have to deal with making the stack take dict_nodes and dereferencing the
		number from it rather than pushing an int pointer instead
